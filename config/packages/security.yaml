security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    encoders:
        App\Entity\Users:
            algorithm: sha512
    providers:
        users_in_memory: { memory: null }
        our_db_provider:
            entity:
                class: App\Entity\Users
                property: username
    session_fixation_strategy: none
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: our_db_provider
            pattern: ^/
            http_basic: ~
            entry_point: App\Security\LoginFormAuthenticator
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: logout
                target: login
            form_login:
                login_path: login
                default_target_path: homepage
                failure_path: user_registration

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/home, roles: [ROLE_ADMIN, ROLE_PLAYER, ROLE_COACH] }
